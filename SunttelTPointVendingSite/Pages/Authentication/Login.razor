@page "/login"
@using System.ComponentModel.DataAnnotations
@using SunttelTradePointB.Shared.Security;

@inject CustomStateProvider authStateProvider
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <h3>Login</h3>

            <hr />

            <EditForm Model="@loginRequest" OnValidSubmit="@LoginUser">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="email">Email:</label>
                    <InputText id="email" class="form-control" @bind-Value="@loginRequest.UserName" />
                    <ValidationMessage For="@(() => loginRequest.UserName)" />
                </div>

                <div class="form-group">
                    <label for="Squad">Squad:</label>
                    <InputText id="Squad" class="form-control" @bind-Value="@loginRequest.SquadName" />
                    <ValidationMessage For="@(() => loginRequest.SquadName)" />
                </div>

                <div class="form-group">
                    <label for="password">Password:</label>
                    <InputText id="password" class="form-control" type="password" @bind-Value="@loginRequest.Password" />
                    <ValidationMessage For="@(() => loginRequest.Password)" />
                </div>

                <div class="form-check m-3">
                    <InputCheckbox id="inputRememberMe" class="form-check-input" @bind-Value="@loginRequest.RememberMe" />
                    <label class="form-check-label" for="inputRememberMe">Remember Me</label>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </EditForm>
        </div>

        <div class="col-md-6 d-none d-md-block">
            <img src="/Images/register.jpg" alt="Login Image" class="img-fluid" />
        </div>
    </div>
</div>
@code {
    LoginRequest loginRequest = new LoginRequest();
    private bool loading = false;

    private async Task LoginUser()
    {
        loading = true;
        //await authStateProvider.Login(loginRequest);
        //var idUser = authStateProvider.GetCurrentUser().Id;
        navigationManager.NavigateTo("/");
        loading = false;
    }

  
}
