@page "/register"
@using SunttelTradePointB.Client.Models;
@using SunttelTradePointB.Client.Services
@using SunttelTradePointB.Shared.Security
@using SunttelTradePointB.Client.Shared.EntityShareComponents.EntitySubComponents

@layout AuthLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
    <DataAnnotationsValidator />

  
    <EntityNewActor EntitySaved="@EntityUserSaved">

    </EntityNewActor>

</EditForm>

@functions {

    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }


    public async Task EntityUserSaved(NewUserResponse newUserResponse)
    {
        try
        {
            registerRequest.UserName = newUserResponse.UserName;
            registerRequest.PasswordConfirm = newUserResponse.Password;
            registerRequest.Password = newUserResponse.Password;
            registerRequest.EntityId = newUserResponse.EntityId;

            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}