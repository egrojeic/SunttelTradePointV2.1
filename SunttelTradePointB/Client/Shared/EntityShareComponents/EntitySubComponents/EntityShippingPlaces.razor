@using SunttelTradePointB.Shared.Common
@using SunttelTradePointB.Client.Shared.EntityShareComponents.EntityPopUpComponents
@using Syncfusion.Blazor.Grids
@inject ActorsNodeService actorsNodeServive;
@inject ContextMenuService ContextMenuService
@inject NavigationManager navigationManager

<div class="GeneralContainerDetails">

<div class="detailsTitleContainer">
    <h3 class="subTitleDetailForm">Shipping Places</h3>
        <a class="btn" title="Add new shipping to address" @onclick="(() => NavigateShippingPlaces())">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus-circle add-btn-style" viewBox="0 0 16 16">
                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
            </svg>
        </a>
</div>



<div class="tableBodyContainer">

    @if (entityAddressList != null)
    {
        <RadzenDataGrid AllowFiltering="true"
                    AllowColumnResize="true"
                    AllowAlternatingRows="true"
                    FilterMode="FilterMode.Advanced"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    AllowSorting="true"
                    PageSize="5"
                    AllowPaging="true"
                    PagerHorizontalAlign="Radzen.HorizontalAlign.Left"
                    ShowPagingSummary="true"
                    Data="@entityAddressList"
                    TItem="Address"
                    ColumnWidth="300px"
                    SelectionMode="DataGridSelectionMode.Single"
                    LogicalFilterOperator="LogicalFilterOperator.Or"
                    @bind-Value=@selectedAddres Class="m-4"
                    CellContextMenu="@ShowContextMenuWithContent"
                    @ref="referGrid">

            <Columns>
                <RadzenDataGridColumn TItem="Address" Property="Name" Title="Name" Frozen="true" Width="auto" />
                    <RadzenDataGridColumn TItem="Address" Property="AddressLine1" Title="Address Line 1" Frozen="false" Width="auto" />
                    <RadzenDataGridColumn TItem="Address" Property="AddressLine2" Title="Address Line 2" Frozen="false" Width="auto" />
                    <RadzenDataGridColumn TItem="Address" Property="CityAddress.RegionCity.CountryRegion.Name" Title="Country" Frozen="false" Width="auto" />
                    <RadzenDataGridColumn TItem="Address" Property="CityAddress.RegionCity.Name" Title="Region/State" Frozen="false" Width="auto" />
                    <RadzenDataGridColumn TItem="Address" Property="CityAddress.Name" Title="City" Frozen="false" Width="auto" />
                    <RadzenDataGridColumn TItem="Address" Property="ZipCode" Title="Zip" Frozen="false" Width="auto" />


            </Columns>


        </RadzenDataGrid>
    }

</div>
</div>

@code {
    [Parameter]
    public string? EntityId { get; set; }
    [Parameter]
    public string Code { get; set; }

    List<Address> entityAddressList;
    IList<Address> selectedAddres;
    RadzenDataGrid<Address>? referGrid;
    City city = new City();
    GeoRegion geoRegion = new GeoRegion();

    protected override async Task OnInitializedAsync()
    {
        await GetEntityAddress();
    }

    private async Task GetEntityAddress()
    {
        if (EntityId != null)
        {
            var response = await actorsNodeServive.GetEntityActorAddressList(EntityId);
            if (response != null)
                entityAddressList = response;
            StateHasChanged();
        }
    }

    void ShowContextMenuWithContent(DataGridCellMouseEventArgs<Address> args) => ContextMenuService.Open(args, ds =>
    @<RadzenMenu Click="OnMenuItemClick">
                    <RadzenMenuItem Text="Edit" Value=args.Data Icon="edit"></RadzenMenuItem>
                    <RadzenMenuItem Text="Delete" Value=args.Data Icon="delete"></RadzenMenuItem>
                    <RadzenMenuItem Text="Show in Map" Value=args.Data Icon="location_on"></RadzenMenuItem>

        </RadzenMenu>
    );

    void OnMenuItemClick(MenuItemEventArgs args)
    {
        Address argObj = (Address)args.Value;
        if(args.Text == "Edit")
        {
            navigationManager.NavigateTo($"/Actors/{EntityId}/ShippingPlaces/{argObj.Id}/Edit");
        }
        Console.WriteLine($"Menu item with Value={argObj.Name} clicked");
        if (!args.Value.Equals(3) && !args.Value.Equals(4))
        {
            ContextMenuService.Close();
        }
    }

    private async Task NavigateShippingPlaces()
    {
        navigationManager.NavigateTo($"/Actors/{EntityId}/{Code}/ShippingPlaces");
    }

}
