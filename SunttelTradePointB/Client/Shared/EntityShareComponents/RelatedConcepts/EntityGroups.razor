@page "/GroupsEntities/NewGroup"
@page "/GroupsEntities/{groupId}"
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Cards
@using SunttelTradePointB.Shared.Common

@inject NavigationManager navigationManager
@inject IEntityNodes actorsNodeServive

<div class="control-section">
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 container">
            <SfCard>
                <CardHeader Title="Add a new group" />
                <CardContent>
                    <form onsubmit="event.preventDefault();">
                        <div class="form-group row">
                            <label class="control-label col-md-12">Code: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentCode">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityGroup.Code" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group py-2">
                            <label class="control-label col-md-12">Name: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentName">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityGroup.Name" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group py-2">
                            <label class="control-label col-md-12">Commercial Group: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentGroup">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityGroup.GroupClassificationCriteria" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <MessageSaveComponent message="Group Saved" isVisible="visible"></MessageSaveComponent>

                        <div class="py-2">
                            <button type="submit" class="size-btn color-btn" style="float:right" @onclick="(() => SaveGroup(groupId, entityGroup))"><i class="fa-regular fa-floppy-disk color-hover"></i></button>
                            <button type="button" class="btn" style="float:right" @onclick="GoBack"><i class="fa-sharp fa-solid fa-circle-arrow-left"></i></button>
                        </div>
                        
                    </form>
                    
                </CardContent>
            </SfCard>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string groupId { get; set; }

    private string ContentCode = "e.g. 12345";
    private string ContentName = "e.g. Test";
    private string ContentGroup = "e.g. Commercial";

    private string userId = UIClientGlobalVariables.UserId;
    private string ipAddress = UIClientGlobalVariables.PublicIpAddress;

    EntityGroup entityGroup = new EntityGroup();
    EntityGroup entityGroupList = new EntityGroup();

    public bool visible = false;

    protected override async Task OnInitializedAsync()
    {
        await GetGroupById(groupId);
    }

    public async Task SaveGroup(string groupId, EntityGroup entityGroupSave)
    {
        if (groupId != null && entityGroup != null)
            entityGroupSave.Id = groupId;
        entityGroup = entityGroupSave;
        await actorsNodeServive.SaveEntityGroup(groupId, entityGroup);
        visible = true;
        Refresh();
    }

    private async Task GetGroupById(string groupId)
    {
        if(groupId != null)
        {
            entityGroupList = await actorsNodeServive.GetEntityGroup(groupId);
            entityGroup = entityGroupList;
        }
    }

    private void Refresh()
    {
        entityGroup = new EntityGroup();
    }


    private void GoBack()
    {
        navigationManager.NavigateTo($"/GroupsEntities/");
    }

}
