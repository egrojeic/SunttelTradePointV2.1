@page "/EntityPalletType/NewPalletType"
@page "/EntityPalletType/{palletId}/Edit"
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Cards
@using SunttelTradePointB.Shared.Common

@inject NavigationManager navigationManager
@inject IEntityNodes actorsNodeServive

<div class="control-section">
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 container">
            <SfCard>
                <CardHeader Title="Add a new group" />
                <CardContent>
                    <form onsubmit="event.preventDefault();">
                        <div class="form-group row">
                            <label class="control-label col-md-12">Code: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentCode">
                                    <input id="name" type="text" class="form-control" @bind-value="@palletType.Code" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group py-2">
                            <label class="control-label col-md-12">Legacy Id: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentCode">
                                    <input id="name" type="text" class="form-control" @bind-value="@palletType.LegacyId" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group py-2">
                            <label class="control-label col-md-12">Name: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentName">
                                    <input id="name" type="text" class="form-control" @bind-value="@palletType.Name" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <MessageSaveComponent message="Pallet Type Saved" isVisible="visible"></MessageSaveComponent>

                        <div class="py-2">
                            <button type="submit" class="size-btn color-btn" style="float:right" @onclick="(() => SavePalletType(palletId, palletType))"><i class="fa-regular fa-floppy-disk color-hover"></i></button>
                            <button type="button" class="btn" style="float:right" @onclick="GoBack"><i class="fa-sharp fa-solid fa-circle-arrow-left"></i></button>
                        </div>

                    </form>

                </CardContent>
            </SfCard>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string palletId { get; set; }

    private string ContentCode = "e.g. 12345";
    private string ContentName = "e.g. Test";

    private bool visible = false;

    PalletType palletType = new PalletType();

    protected override async Task OnInitializedAsync()
    {
        await GetPalletTypeById(palletId);
    }

    private async Task SavePalletType(string palletTypeId, PalletType palletTypeSave)
    {
        if (palletId != null)
            palletTypeSave.Id = palletId;
        palletTypeSave = palletType;
        if(palletTypeSave != null)
        {
            await actorsNodeServive.SavePalletType(palletTypeSave);
            visible = true;
            StateHasChanged();
        }
    }

    private async Task GetPalletTypeById(string palletTypeId)
    {
        if(palletId != null)
        {
            palletType = await actorsNodeServive.GetPalleTypeById( palletTypeId);
        }
    }

    private void Refresh()
    {
        palletType = new PalletType();
    }

    private void GoBack()
    {
        navigationManager.NavigateTo($"/EntityPalletType");
    }

}
