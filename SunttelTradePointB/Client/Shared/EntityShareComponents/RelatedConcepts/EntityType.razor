@page "/EntityType/NewEntityType"
@page "/EntityType/{entityId}/Edit"
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Cards
@using SunttelTradePointB.Shared.Common

@inject NavigationManager navigationManager
@inject IEntityNodes actorsNodeServive


<div class="control-section">
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 container">
            <SfCard>
                <CardHeader Title="Add a new entity Type" />
                <CardContent>
                    <form onsubmit="event.preventDefault();">
                        <div class="form-group row">
                            <label class="control-label col-md-12">Code: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentCode">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityType.Code" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="control-label col-md-12">Legacy Id: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentLegacy">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityType.LegacyId" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group py-2">
                            <label class="control-label col-md-12">Name: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentName">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityType.Name" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <MessageSaveComponent message="Entity Type Saved" isVisible="visible"></MessageSaveComponent>

                        <div class="py-2">
                            <button type="submit" class="size-btn color-btn" style="float:right" @onclick="(() => SaveEntityType(entityId, entityType))"><i class="fa-regular fa-floppy-disk color-hover"></i></button>
                            <button type="button" class="btn" style="float:right" @onclick="GoBack"><i class="fa-sharp fa-solid fa-circle-arrow-left"></i></button>
                        </div>

                    </form>

                </CardContent>
            </SfCard>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string entityId { get; set; }

    private string ContentCode = "e.g. 12345";
    private string ContentLegacy = "e.g. 12345";
    private string ContentName = "e.g. Test";

    AtomConcept entityType = new AtomConcept();
    AtomConcept entityTypeById = new AtomConcept();

    private bool visible { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await GetEntityTypeById(entityId);
    }

    private async Task GetEntityTypeById(string entityTypeId)
    {
        if (entityTypeId != null)
        {
            entityTypeById = await actorsNodeServive.GetEntityTypeById(entityTypeId);
            if (entityTypeById != null)
            {
                entityType = entityTypeById;
            }
        }
    }

    private async Task SaveEntityType(string entityTypeId, AtomConcept entityTypeSave)
    {
        if (entityTypeId != null && entityType != null)
            entityType.Id = entityTypeId;
        entityTypeSave = entityType;
        await actorsNodeServive.SaveEntityType(entityTypeSave);
        visible = true;
        StateHasChanged();
    }

    private void GoBack()
    {
        navigationManager.NavigateTo($"/TypesEntities");
    }

}