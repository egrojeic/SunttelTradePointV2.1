@page "/EntityRoles/NewRole"
@page "/EntityRoles/{roleId}/Edit"
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Cards
@using SunttelTradePointB.Shared.Common

@inject NavigationManager navigationManager
@inject IEntityNodes actorsNodeServive


<div class="control-section">
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 container">
            <SfCard>
                <CardHeader Title="Add a new rol" />
                <CardContent>
                    <form onsubmit="event.preventDefault();">
                        <div class="form-group row">
                            <label class="control-label col-md-12">Code: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentCode">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityRole.Code" required />
                                </SfTooltip>
                            </div>
                        </div>

                        <div class="form-group py-2">
                            <label class="control-label col-md-12">Name: </label>
                            <div class="col">
                                <SfTooltip ID="Tooltip" Target="#name" Content="@ContentName">
                                    <input id="name" type="text" class="form-control" @bind-value="@entityRole.Name" required />
                                </SfTooltip>
                            </div>
                        </div>          

                        <div>
                            <label>@GetName(nameof(EntityRole.IsCompany), new EntityRole()): </label>
                            <input type="checkbox" @bind="entityRole.IsCompany">
                        </div>
                        <div>
                            <label>@GetName(nameof(EntityRole.IsCustomer), new EntityRole()): </label>
                            <input type="checkbox" @bind="entityRole.IsCustomer">
                        </div>
                        <div>
                            <label>@GetName(nameof(EntityRole.IsUser), new EntityRole()): </label>
                            <input type="checkbox" @bind="entityRole.IsUser">
                        </div>
                        <div>
                            <label>@GetName(nameof(EntityRole.IsProvider), new EntityRole()): </label>
                            <input type="checkbox" @bind="entityRole.IsProvider">
                        </div>


                        <div class="py-2">
                            <button type="submit" class="size-btn color-btn" style="float:right" @onclick="(() => SaveRole(roleId, entityRole))"><i class="fa-regular fa-floppy-disk color-hover"></i></button>
                            <button type="button" class="btn" style="float:right" @onclick="GoBack"><i class="fa-sharp fa-solid fa-circle-arrow-left"></i></button>
                        </div>



                        <MessageSaveComponent message="@message" isVisible="visible"></MessageSaveComponent>
                    </form>

                </CardContent>
            </SfCard>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string roleId { get; set; }

    private string ContentCode = "e.g. 12345";
    private string ContentName = "e.g. Test";

    private string message { get; set; } = "";
    private bool visible { get; set; } = false;

    EntityRole entityRole = new EntityRole();

    protected override async Task OnInitializedAsync()
    {
        await GetRoleById(roleId);
    }

    private async Task GetRoleById(string roleId)
    {
        if (roleId != null)
        {
            entityRole = await actorsNodeServive.GetRoleById(roleId);
        }
    }

    private async Task SaveRole(string roleId, EntityRole entityRoleSave)
    {
        if (roleId != null && entityRole != null)
            entityRole.Id = roleId;
        entityRoleSave = entityRole;
        var result = await actorsNodeServive.SaveEntityRole(roleId, entityRoleSave);
        if (result)
        {
            message = "Role Saved";
            visible = true;
        }
        RefreshMe();
    }

    private void RefreshMe()
    {
        entityRole = new EntityRole();
    }

    private void GoBack()
    {
        navigationManager.NavigateTo($"/EntityRoles/");
    }

    public string GetName(string Name, Object Obj)
    {
        Name = UICommonFunctions.GetDisplayName(Obj, Name) != null ? UICommonFunctions.GetDisplayName(Obj, Name) : Name;
        return Name;
    }

}
