@using System;
@using System.Timers;
@using Microsoft.AspNetCore.SignalR.Client
@using SunttelTradePointB.Shared.Communications
@using SunttelTradePointB.Client.Shared.Chat.AuxiliarComponents
@using System.Text.RegularExpressions;


@inject NavigationManager NavigationManager
@inject ActorsNodeService actorsNodeService
@inject CommunicationService communicationService
@inject AuthenticationStateProvider AuthenticationStateProvider


@if (modeMenu == "grid-columns-2-chat-max")
{
    <div class="content-search">
        <input class="input-mode">
        <img class="img-ico-search" src="/images//search.svg">
    </div>
    <div class="group-max">
        <div class="item-group">
            <img @onclick='()=>SetModeMenu("grid-columns-2-chat-min")' src="/images//menu.png">
        </div>
        @if(channelCommunicationsGroups==null) channelCommunicationsGroups = new();
        @foreach (var item in channelCommunicationsGroups)
        {
            <div class="item-group-column">
                <img src="@(item.SkinImageName !=null ?(item.SkinImageName!=""? item.SkinImageName:"/images/EntityGroups.png"):"/images/EntityGroups.png")" />
                <p class="title-normal">@(item.Name != null ? item.Name : "Group")"</p>
            </div>
        }
       
    </div>
}
@if (modeMenu == "grid-columns-2-chat-min")
{    
   
    <div class="group-min">

        <div class="item-group">
            <img @onclick='()=>SetModeMenu("grid-columns-2-chat-max")' src="/images//menu.png">
        </div>
        <div class="item-group">
            <img @onclick='()=>SetNewPage("newGroup")' src="/images/add.png" />
            <p class="title-float">Add group</p>
        </div>
        @if (channelCommunicationsGroups == null) channelCommunicationsGroups = new();
        @foreach (var item in channelCommunicationsGroups)
        {
            <div class="item-group">
                <img src="@(item.SkinImageName !=null ?(item.SkinImageName!=""? item.SkinImageName:"/images/EntityGroups.png"):"/images/EntityGroups.png")" />
                <p class="title-float">@(item.Name != null ? item.Name : "Group")"</p>
            </div>
        }
     
    </div>
 
    }
@code {
    [Parameter]
    public EventCallback<string> EventCallModeMenu { get; set; }
    [Parameter]
    public EventCallback<string> EventCallNewPage { get; set; }
    [Parameter]
    public string modeMenu { get; set; }

    List<ChannelCommunicationsGroup> channelCommunicationsGroups = new();
    ChannelCommunicationsGroup channelCommunicationsGroup = new();
    public List<CommunicationsGroupParticipant> participants { get; set; }
    public EntityNodeCommunications Owner { get; set; }


    protected override void OnInitialized()
    {
        OnInitializedAsync();
    }

    protected async void OnInitializedAsync()
    {
        // channelCommunicationsGroup = await actorsNodeService.GetChannelCommunicationsGroupById("");
        channelCommunicationsGroups = await actorsNodeService.GetChannelCommunicationsGroups();
        StateHasChanged();
    }


    protected override void OnParametersSet()
    {
        var r = modeMenu;
        StateHasChanged();
    }


    public async void SetModeMenu(string _modeMenu)
    {
        await EventCallModeMenu.InvokeAsync(_modeMenu);
        modeMenu = _modeMenu;
        StateHasChanged();
    }

    public void SetNewPage(string Page)
    {
        EventCallNewPage.InvokeAsync(Page);
        StateHasChanged();

    }
    public void Reload()
    {
        StateHasChanged();
    }


}
