@page "/WarehousesGeneral/NewWarehouse"
@page "/WarehousesGeneral/{id}/Edit"

@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns
@using SunttelTradePointB.Shared.Common

@inject NavigationManager navigationManager
@inject WarehouseService warehouseService
@inject TransactionalItemsService transactionalItemsService

<div class="control-section">
    <div class="row">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md-6 container">
            <SfCard>
                <CardHeader Title="Add a new warehouse" />
                <CardContent>
                    <form onsubmit="event.preventDefault();">
                        <div class="form-group row">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblWareHouseParent: </label>
                                <div class="col">
                                    <SfDropDownList TValue="string" TItem="Warehouse" Placeholder="Select a associated entity" AllowFiltering="true" DataSource="@warehouseList">
                                        <DropDownListEvents TItem="Warehouse" TValue="string" ValueChange="@ValueChangeAssociationEntity"></DropDownListEvents>
                                        <DropDownListFieldSettings Value="Name" Text="Name"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblAssociatedEntity: </label>
                                <div class="col">
                                    <input type="text" class="form-control" required />
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblIsExternal: </label>
                                <div class="col">
                                    <SfSwitch @bind-Checked="isExternal"></SfSwitch>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblIsTransformationFacility: </label>
                                <div class="col">
                                    <SfSwitch @bind-Checked="isTransformationFacility"></SfSwitch>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblScanSimulated: </label>
                                <div class="col">
                                    <SfSwitch @bind-Checked="scanSimulated"></SfSwitch>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblIsInventoryControlled: </label>
                                <div class="col">
                                    <SfSwitch @bind-Checked="isInventoryControlled"></SfSwitch>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblInventoryTransactionalItemType: </label>
                                <div class="col">
                                    <SfDropDownList TValue="string" TItem="TransactionalItemType" Placeholder="Select a item type" AllowFiltering="true" DataSource="@itemType">
                                        <DropDownListEvents TItem="TransactionalItemType" TValue="string" ValueChange="@ValueChangeItemType"></DropDownListEvents>
                                        <DropDownListFieldSettings Value="Name" Text="Name"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblWarehouseAddress: </label>
                                <div class="col">
                                    <input type="text" class="form-control" required />
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblContactPerson: </label>
                                <div class="col">
                                    <input type="text" class="form-control" required />
                                </div>
                            </div>
                        </div>

                        <div class="form-group row py-2">
                            <div class="form-group row">
                                <label class="control-label col-md-12">@lblIsActive: </label>
                                <div class="col">
                                    <SfSwitch @bind-Checked="isActive"></SfSwitch>
                                </div>
                            </div>
                        </div>

                        <MessageSaveComponent message="Electronic Address Saved" isVisible="visible"></MessageSaveComponent>

                        <div class="py-2">
                            <button type="submit" class="size-btn color-btn" style="float:right"><i class="fa-regular fa-floppy-disk color-hover"></i></button>
                            <button type="button" class="btn" style="float:right" @onclick="GoBack"><i class="fa-sharp fa-solid fa-circle-arrow-left"></i></button>
                        </div>
                    </form>

                </CardContent>
            </SfCard>
        </div>
    </div>
</div>





@code {
    [Parameter]
    public string Id { get; set; }

    Warehouse warehouse = new Warehouse();

    Warehouse WareHouseParent = new Warehouse();
    List<Warehouse> warehouseList = new List<Warehouse>();
    TransactionalItemType transactionalItemType = new TransactionalItemType();
    List<TransactionalItemType> itemType = new List<TransactionalItemType>();

    private string lblWareHouseParent = "";
    private string lblAssociatedEntity = "";
    private string lblIsExternal = "";
    private string lblIsTransformationFacility = "";
    private string lblScanSimulated = "";
    private string lblIsInventoryControlled = "";
    private string lblInventoryTransactionalItemType = "";
    private string lblWarehouseAddress = "";
    private string lblContactPerson = "";
    private string lblIsActive = "";

    private bool visible { get; set; } = false;

    private bool isExternal { get; set; } = false;
    private bool isTransformationFacility { get; set; } = false;
    private bool scanSimulated { get; set; } = false;
    private bool isInventoryControlled { get; set; } = false;
    private bool isActive { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        lblWareHouseParent = UICommonFunctions.GetDisplayName(new Warehouse(), "WareHouseParent");
        lblAssociatedEntity = UICommonFunctions.GetDisplayName(new Warehouse(), "AssociatedEntity");
        lblIsExternal = UICommonFunctions.GetDisplayName(new Warehouse(), "IsExternal");
        lblIsTransformationFacility = UICommonFunctions.GetDisplayName(new Warehouse(), "IsTransformationFacility");
        lblScanSimulated = UICommonFunctions.GetDisplayName(new Warehouse(), "ScanSimulated");
        lblIsInventoryControlled = UICommonFunctions.GetDisplayName(new Warehouse(), "IsInventoryControlled");
        lblInventoryTransactionalItemType = UICommonFunctions.GetDisplayName(new Warehouse(), "InventoryTransactionalItemType");
        lblWarehouseAddress = UICommonFunctions.GetDisplayName(new Warehouse(), "WarehouseAddress");
        lblContactPerson = UICommonFunctions.GetDisplayName(new Warehouse(), "ContactPerson");
        lblIsActive = UICommonFunctions.GetDisplayName(new Warehouse(), "IsActive");
        warehouseList = await warehouseService.GetWarehouseList("all");
        itemType = await transactionalItemsService.GetSelectorListTransactionalItemTypes();

    }

    private void ValueChangeAssociationEntity(ChangeEventArgs<string, Warehouse> args)
    {
        WareHouseParent = args.ItemData;
    }

    private void ValueChangeItemType(ChangeEventArgs<string, TransactionalItemType> args)
    {
        transactionalItemType = args.ItemData;
    }

    private void GoBack()
    {
        navigationManager.NavigateTo($"/WarehousesGeneral");
    }


}