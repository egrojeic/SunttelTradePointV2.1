@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.SplitButtons
@using SunttelTradePointB.Shared.Sales
@inject NavigationManager Navigation
@inject IJSRuntime Js


<div id="container-menu-general">
    <nav>
        <button class="general-menu-button btn-new" @onclick="CreateNew"><i class="fa-solid fa-file"></i></button>

        <SfSplitButton Content="Import..." IconCss="fa-solid fa-file-import" CssClass="splitButtonsStyle">
            <DropDownMenuItems>
                <DropDownMenuItem Text="Importing from the cloud..." IconCss="fa-solid fa-cloud-arrow-up"></DropDownMenuItem>
                <DropDownMenuItem Text="Uploading a csv file..." IconCss="fa-solid fa-file-csv"></DropDownMenuItem>
            </DropDownMenuItems>
        </SfSplitButton>

        <SfSplitButton Content="Views" IconCss="fa-solid fa-arrows-to-circle" CssClass="splitButtonsStyle">
            <SplitButtonEvents ItemSelected="ItemSelected">
            </SplitButtonEvents>
            <DropDownMenuItems>
                <DropDownMenuItem Id="Consolidated" Text="Consolidated" IconCss="fa-solid fa-group-arrows-rotate"></DropDownMenuItem>
                <DropDownMenuItem Id="Detailed" Text="Detailed" IconCss="fa-solid fa-layer-group"></DropDownMenuItem>
            </DropDownMenuItems>
        </SfSplitButton>

         <SfSplitButton Content="Related Concepts" IconCss="fa-solid fa-arrows-to-circle" CssClass="splitButtonsStyle">
            <SplitButtonEvents ItemSelected="ItemSelectedConcepts">
            </SplitButtonEvents>
            <DropDownMenuItems>
                <DropDownMenuItem Id="CreditStatusGeneral" Text="Credit Status" IconCss="e-menu-icon e-icons e-repeat"></DropDownMenuItem>
                <DropDownMenuItem Id="CreditTypeGeneral" Text="Credit Type" IconCss="e-menu-icon e-icons e-level-3"></DropDownMenuItem>
                <DropDownMenuItem Id="CreditReasonGeneral" Text="Credit Reason" IconCss="e-menu-icon e-icons e-table-cell"></DropDownMenuItem>
            </DropDownMenuItems>
        </SfSplitButton>

    </nav>

</div>



@code {

    [Parameter]
    public EventCallback<string> SetDocumentTypeId { get; set; }
    [Parameter]
    public string page { get; set; }
    [Parameter]
    public string actualPage { get; set; }



    protected override void OnParametersSet()
    {
        StateHasChanged();
        base.OnParametersSet();
    }

    void OnClick(RadzenSplitButtonItem item, string buttonName)
    {
        if (item != null)
        {
            Console.WriteLine($"{buttonName}, item with value {item.Value} clicked");
        }
        else
        {
            Console.WriteLine($"{buttonName} clicked");
        }
    }

    private void ItemSelected(MenuEventArgs args)
    {
        var Selected_item = args.Item.Id;        
         CreateNewTab(args.Item.Id);
    }
    
    private void ItemSelectedConcepts(MenuEventArgs args)
    {
        var Selected_item = args.Item.Id;      
        Navigation.NavigateTo(Selected_item + $"/{actualPage}");
    }

    private void SetDocumentType(MenuEventArgs args)
    {
        var Selected_item = args.Item.Id;
       SetDocumentTypeId.InvokeAsync(Selected_item);
    }



    public void CreateNewTab(string name)
    {
        Navigation.NavigateTo(name);
      //  Js.InvokeAsync<object>("open", name, "_blank");
    }

    private void CreateNew()
    {
        Navigation.NavigateTo($"/{page}");
    }

}


