@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.SplitButtons
@using SunttelTradePointB.Shared.Sales
@inject NavigationManager Navigation
@inject SunttelTradePointB.Client.Services.QualityEvaluationServices.QualityEvaluationServices QualityEvaluationServices
@inject IJSRuntime Js



<div id="container-menu-general">
    <nav>
        <button class="general-menu-button btn-new" @onclick="CreateNew"><i class="fa-solid fa-file"></i></button>
        @if (PageView != "view")
        {
            <SfSplitButton Content="Import..." IconCss="fa-solid fa-file-import" CssClass="splitButtonsStyle">
                <DropDownMenuItems>
                    <DropDownMenuItem Text="Importing from the cloud..." IconCss="fa-solid fa-cloud-arrow-up"></DropDownMenuItem>
                    <DropDownMenuItem Text="Uploading a csv file..." IconCss="fa-solid fa-file-csv"></DropDownMenuItem>
                </DropDownMenuItems>
            </SfSplitButton>
        }

        <SfSplitButton Content="Related Concepts" IconCss="fa-solid fa-arrows-to-circle" CssClass="splitButtonsStyle">
            <SplitButtonEvents ItemSelected="ItemSelected">
            </SplitButtonEvents>
            <DropDownMenuItems>
                <DropDownMenuItem Id="QualityReportTypeGeneral" Text="Quality Report Type" IconCss="e-menu-icon fa-solid fa-table-columns"></DropDownMenuItem>
                <DropDownMenuItem Id="QualityTrafficLightGeneral" Text="Quality Traffic Light" IconCss="e-menu-icon  fa-solid fa-layer-group"></DropDownMenuItem>
                <DropDownMenuItem Id="QualityParameterGroupGeneral" Text="Quality Parameter Group" IconCss="fa-solid fa-clipboard-list"></DropDownMenuItem>
                <DropDownMenuItem Id="QualityActionGeneral" Text="Quality Action" IconCss="fa-solid fa-clipboard-list"></DropDownMenuItem>
                <DropDownMenuItem Id="QualityAssuranceParameterGeneral" Text="Quality Parameter" IconCss="e-menu-icon fa-solid fa-bookmark"></DropDownMenuItem>
            </DropDownMenuItems>
        </SfSplitButton>

        <SfSplitButton Content="Views" IconCss="fa-solid fa-arrows-to-circle" CssClass="splitButtonsStyle">
            <SplitButtonEvents ItemSelected="ItemSelectedView">
            </SplitButtonEvents>
            <DropDownMenuItems>
                @if (PageView != "view")
                {
                    <DropDownMenuItem Id="view" Text="Dynamic View" IconCss="e-menu-icon fa-solid fa-chart-simple"></DropDownMenuItem>
                }
                else
                {
                    <DropDownMenuItem Id="grid" Text="Table" IconCss="e-menu-icon fa-solid fa-table"></DropDownMenuItem>
                }
            </DropDownMenuItems>
        </SfSplitButton>

    </nav>
</div>


@code {

    [Parameter]
    public EventCallback<string> PageHome { get; set; }
    [Parameter]
    public string PageView { get; set; }


    protected async override void OnInitialized()
    {

        StateHasChanged();
    }



    private void ItemSelected(MenuEventArgs args)
    {
        var Selected_item = args.Item.Id;
        EventIdSelectionMenuItem(Selected_item);
    }

    public void EventIdSelectionMenuItem(string name)
    {
        Navigation.NavigateTo(name);
        //Js.InvokeAsync<object>("open", name, "_blank");
    }

    private void CreateNew()
    {
        PageHome.InvokeAsync("item");
        // Navigation.NavigateTo("/QualityEvaluationItem");
    }

    private void ItemSelectedView(MenuEventArgs args)
    {
        PageHome.InvokeAsync(args.Item.Id);

    }

}


