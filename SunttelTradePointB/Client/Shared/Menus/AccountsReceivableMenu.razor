@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.SplitButtons
@using SunttelTradePointB.Shared.Sales
@inject NavigationManager Navigation
@inject SunttelTradePointB.Client.Services.SalesServices.SalesDocuments DocumentServices
@inject IJSRuntime Js



<div id="container-menu-general">
    <nav>
      @*  <button class="general-menu-button btn-new" @onclick="CreateNew"><i class="fa-solid fa-file"></i></button>*@     

        <SfSplitButton Content="Related Concepts" IconCss="fa-solid fa-arrows-to-circle" CssClass="splitButtonsStyle">
            <SplitButtonEvents ItemSelected="ItemSelected">
            </SplitButtonEvents>
            <DropDownMenuItems>
                <DropDownMenuItem Id="PaymentTypeGeneral" Text="Payment Types" IconCss="fa-solid fa-money-bill"></DropDownMenuItem>
            </DropDownMenuItems>
        </SfSplitButton>

        <SfSplitButton Content="Views" IconCss="fa-solid fa-arrows-to-circle" CssClass="splitButtonsStyle">
            <SplitButtonEvents ItemSelected="ItemSelectedView">
            </SplitButtonEvents>
            <DropDownMenuItems>
                @if (page != "view")
                {
                    <DropDownMenuItem Id="view" Text="Dynamic View" IconCss="e-menu-icon fa-solid fa-chart-simple"></DropDownMenuItem>
                }
                else
                {
                    <DropDownMenuItem Id="table" Text="Table" IconCss="e-menu-icon fa-solid fa-table"></DropDownMenuItem>
                }
            </DropDownMenuItems>
        </SfSplitButton>
    
    </nav>

</div>


@code {
    string page = "";
    [Parameter]
    public EventCallback<string> PageHome { get; set; }
    protected async override void OnInitialized()
    {
       
        StateHasChanged();
    }
     

    private void ItemSelected(MenuEventArgs args)
    {
      
        Navigation.NavigateTo(args.Item.Id);
    }

    private void ItemSelectedView(MenuEventArgs args)
    {
        page = args.Item.Id;
        PageHome.InvokeAsync(page);
        StateHasChanged();
    }


    public void EventIdSelectionMenuItem(string name)
    {
        Navigation.NavigateTo(name);
      //  Js.InvokeAsync<object>("open", name, "_blank");
    }

    private void CreateNew()
    {
        Navigation.NavigateTo("/ShippingItem");
    }

}


